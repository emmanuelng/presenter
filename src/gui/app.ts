import { app as electronApp, BrowserWindow } from 'electron';

// This allows TypeScript to pick up the magic constants that's auto-generated by Forge's Webpack
// plugin that tells the Electron app where to look for the Webpack-bundled app code (depending on
// whether you're running in development or production).
declare const MAIN_WINDOW_WEBPACK_ENTRY: string;
declare const MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY: string;

class App {

    public start(): void {
        // Handle creating/removing shortcuts on Windows when installing/uninstalling.
        if (require('electron-squirrel-startup')) {
            electronApp.quit();
        }

        // This method will be called when Electron has finished initialization and is ready to
        // create browser windows. Some APIs can only be used after this event occurs.
        electronApp.on('ready', this.createWindow);

        // Quit when all windows are closed, except on macOS. There, it's common for applications
        // and their menu bar to stay active until the user quits explicitly with Cmd + Q.
        electronApp.on('window-all-closed', () => {
            if (process.platform !== 'darwin') {
                electronApp.quit();
            }
        });

        electronApp.on('activate', () => {
            // On OS X it's common to re-create a window in the app when the dock icon is clicked
            // and there are no other windows open.
            if (BrowserWindow.getAllWindows().length === 0) {
                this.createWindow();
            }
        });
    }

    private createWindow(): void {
        // Create the browser window.
        const mainWindow = new BrowserWindow({
            height: 600,
            width: 800,
            webPreferences: {
                preload: MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY,
            },
        });

        // and load the index.html of the app.
        mainWindow.loadURL(MAIN_WINDOW_WEBPACK_ENTRY);

        // Open the DevTools.
        mainWindow.webContents.openDevTools();
    }
}

const app = new App();
export default app;